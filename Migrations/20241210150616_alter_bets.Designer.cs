// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Pra_C3_Native.Data;

#nullable disable

namespace Pra_C3_Native.Migrations
{
    [DbContext(typeof(NativeContext))]
    [Migration("20241210150616_alter_bets")]
    partial class alter_bets
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("Pra_C3_Native.Models.Bet", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("Matchid")
                        .HasColumnType("int");

                    b.Property<bool>("PayedOut")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("Winner")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("Won")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("amount")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("Matchid");

                    b.HasIndex("UserId");

                    b.ToTable("Bets");
                });

            modelBuilder.Entity("Pra_C3_Native.Models.Match", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("Match_id")
                        .HasColumnType("int");

                    b.Property<string>("Team1")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int?>("Team1_Score")
                        .HasColumnType("int");

                    b.Property<int>("Team1_id")
                        .HasColumnType("int");

                    b.Property<string>("Team2")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int?>("Team2_Score")
                        .HasColumnType("int");

                    b.Property<int>("Team2_id")
                        .HasColumnType("int");

                    b.Property<string>("Winner")
                        .HasColumnType("longtext");

                    b.HasKey("id");

                    b.ToTable("Matches");
                });

            modelBuilder.Entity("Pra_C3_Native.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Admin")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("Credits")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Pra_C3_Native.Models.Bet", b =>
                {
                    b.HasOne("Pra_C3_Native.Models.Match", "Match")
                        .WithMany("Bets")
                        .HasForeignKey("Matchid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Pra_C3_Native.Models.User", "User")
                        .WithMany("Bets")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Match");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Pra_C3_Native.Models.Match", b =>
                {
                    b.Navigation("Bets");
                });

            modelBuilder.Entity("Pra_C3_Native.Models.User", b =>
                {
                    b.Navigation("Bets");
                });
#pragma warning restore 612, 618
        }
    }
}
